#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
# Source0 file verified with key 0xD9C4D26D0E604491 (matt@openssl.org)
#
%define keepstatic 1
Name     : openssl
Version  : 1.1.1g
Release  : 97
URL      : https://www.openssl.org/source/openssl-1.1.1g.tar.gz
Source0  : https://www.openssl.org/source/openssl-1.1.1g.tar.gz
Source1  : https://www.openssl.org/source/openssl-1.1.1g.tar.gz.asc
Summary  : unknown
Group    : Development/Tools
License  : BSD-2-Clause
Requires: openssl-data = %{version}-%{release}
Requires: ca-certs
Requires: ca-certs-static
Requires: p11-kit
BuildRequires : buildreq-configure
BuildRequires : buildreq-cpan
BuildRequires : buildreq-qmake
BuildRequires : ca-certs
BuildRequires : ca-certs-static
BuildRequires : gcc-dev
BuildRequires : gcc-dev32
BuildRequires : gcc-libgcc32
BuildRequires : gcc-libstdc++32
BuildRequires : glibc-dev
BuildRequires : glibc-dev32
BuildRequires : glibc-libc32
BuildRequires : p11-kit
BuildRequires : perl(Test::More)
BuildRequires : pkgconfig(zlib)
BuildRequires : util-linux-bin
BuildRequires : util-linux-extras
BuildRequires : zlib-dev
BuildRequires : zlib-dev32
BuildRequires : zlib-staticdev
# Suppress stripping binaries
%define __strip /bin/true
%define debug_package %{nil}
Patch1: 0001-Use-clearlinux-CFLAGS-during-build.patch
Patch2: 0002-Hide-a-symbol-from-Steam.patch
Patch3: 0003-Use-OS-provided-copy-of-openssl.cnf-as-fallback.patch

%description
OpenSSL 1.1.1g 21 Apr 2020
All rights reserved.
DESCRIPTION
-----------
The OpenSSL Project is a collaborative effort to develop a robust,
commercial-grade, fully featured, and Open Source toolkit implementing the
Transport Layer Security (TLS) protocols (including SSLv3) as well as a
full-strength general purpose cryptographic library.

%package data
Summary: data components for the openssl package.
Group: Data

%description data
data components for the openssl package.


%prep
%setup -q -n openssl-1.1.1g
cd %{_builddir}/openssl-1.1.1g
%patch1 -p1
%patch2 -p1
%patch3 -p1
pushd ..
cp -a openssl-1.1.1g build32
popd

%build
unset http_proxy
unset https_proxy
unset no_proxy
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1596160572
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
## altflags_pgo content
## pgo generate
export PGO_GEN="-fprofile-generate=/var/tmp/pgo -fprofile-dir=/var/tmp/pgo -fprofile-abs-path -fprofile-update=atomic -fprofile-arcs -ftest-coverage --coverage -fprofile-partial-training"
export CFLAGS_GENERATE="-O3 -march=native -mtune=native -falign-functions=32 -fsemantic-interposition -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -mtls-dialect=gnu2 -pipe -falign-loops=32 -ffunction-sections $PGO_GEN"
export FCFLAGS_GENERATE="-O3 -march=native -mtune=native -falign-functions=32 -fsemantic-interposition -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -mtls-dialect=gnu2 -pipe -falign-loops=32 -ffunction-sections $PGO_GEN"
export FFLAGS_GENERATE="-O3 -march=native -mtune=native -falign-functions=32 -fsemantic-interposition -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -mtls-dialect=gnu2 -pipe -falign-loops=32 -ffunction-sections $PGO_GEN"
export CXXFLAGS_GENERATE="-O3 -march=native -mtune=native -falign-functions=32 -fsemantic-interposition -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -mtls-dialect=gnu2 -pipe -falign-loops=32 -ffunction-sections $PGO_GEN"
export LDFLAGS_GENERATE="-O3 -march=native -mtune=native -falign-functions=32 -fsemantic-interposition -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -mtls-dialect=gnu2 -pipe -falign-loops=32 -ffunction-sections $PGO_GEN"
## pgo use
## -fno-PIE -fno-PIE -m64 -no-pie -fpic -fvisibility=hidden  -ffat-lto-objects
## gcc: -feliminate-unused-debug-types -fipa-pta -flto=16 -Wno-error
export PGO_USE="-fprofile-use=/var/tmp/pgo -fprofile-dir=/var/tmp/pgo -fprofile-abs-path -fprofile-correction -fprofile-partial-training"
export CFLAGS_USE="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fsemantic-interposition -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -mtls-dialect=gnu2 -Wno-error -pipe -falign-loops=32 -ffunction-sections $PGO_USE"
export FCFLAGS_USE="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fsemantic-interposition -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -mtls-dialect=gnu2 -Wno-error -pipe -falign-loops=32 -ffunction-sections $PGO_USE"
export FFLAGS_USE="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fsemantic-interposition -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -mtls-dialect=gnu2 -Wno-error -pipe -falign-loops=32 -ffunction-sections $PGO_USE"
export CXXFLAGS_USE="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fsemantic-interposition -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -mtls-dialect=gnu2 -Wno-error -pipe -falign-loops=32 -ffunction-sections $PGO_USE"
export LDFLAGS_USE="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fsemantic-interposition -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -mtls-dialect=gnu2 -Wno-error -pipe -falign-loops=32 -ffunction-sections $PGO_USE"
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
#export CCACHE_DISABLE=1
## altflags_pgo end
export CFLAGS="${CFLAGS_GENERATE}"
export CXXFLAGS="${CXXFLAGS_GENERATE}"
export FFLAGS="${FFLAGS_GENERATE}"
export FCFLAGS="${FCFLAGS_GENERATE}"
export LDFLAGS="${LDFLAGS_GENERATE}"
 ./config no-ssl zlib shared no-rc4 no-ssl2 no-ssl3 --prefix=/usr --openssldir=/etc/ssl --libdir=lib64
## make_prepend content
make depend
## make_prepend end
make  %{?_smp_mflags}  V=1 VERBOSE=1

LD_PRELOAD="./libcrypto.so ./libssl.so" apps/openssl speed rsa
V=1 VERBOSE=1 make -j16 test || :
make clean
export CFLAGS="${CFLAGS_USE}"
export CXXFLAGS="${CXXFLAGS_USE}"
export FFLAGS="${FFLAGS_USE}"
export FCFLAGS="${FCFLAGS_USE}"
export LDFLAGS="${LDFLAGS_USE}"
 ./config no-ssl zlib shared no-rc4 no-ssl2 no-ssl3 --prefix=/usr --openssldir=/etc/ssl --libdir=lib64
## make_prepend content
make depend
## make_prepend end
make  %{?_smp_mflags}  V=1 VERBOSE=1

pushd ../build32/
export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
export ASFLAGS="${ASFLAGS}${ASFLAGS:+ }--32"
export CFLAGS="${CFLAGS}${CFLAGS:+ }-m32 -mstackrealign"
export CXXFLAGS="${CXXFLAGS}${CXXFLAGS:+ }-m32 -mstackrealign"
export LDFLAGS="${LDFLAGS}${LDFLAGS:+ }-m32 -mstackrealign"
i386 ./config no-ssl zlib shared no-rc4 no-ssl2 no-ssl3 no-asm --prefix=/usr --openssldir=/etc/ssl --libdir=lib32
## make_prepend content
make depend
## make_prepend end
make  %{?_smp_mflags}  V=1 VERBOSE=1
popd

%check
export LANG=C.UTF-8
unset http_proxy
unset https_proxy
unset no_proxy
V=1 VERBOSE=1 make -j16 test || :

%install
export SOURCE_DATE_EPOCH=1596160572
rm -rf %{buildroot}
## install_prepend content
export CFLAGS_ORIG="$CFLAGS"
export LDFLAGS_ORIG="$LDFLAGS"
export CXXFLAGS_ORIG="$CXXFLAGS"
## install_prepend end
## install_macro_32 start
pushd ../build32/
export CFLAGS="$CFLAGS_ORIG -m32 -fno-lto -mstackrealign" \
export LDFLAGS="$LDFLAGS_ORIG -m32 -fno-lto -mstackrealign" \
export CXXFLAGS="$CXXFLAGS_ORIG -m32 -fno-lto -mstackrealign" \
V=1 VERBOSE=1 make  DESTDIR=%{buildroot} MANDIR=/usr/share/man MANSUFFIX=openssl install
if [ -d  %{buildroot}/usr/lib32/pkgconfig ]
then
pushd %{buildroot}/usr/lib32/pkgconfig
for i in *.pc ; do ln -s $i 32$i ; done
popd
fi
popd
## install_macro_32 end
## install_macro start
export CFLAGS="$CFLAGS_ORIG -m64 -flto" \
export LDFLAGS="$LDFLAGS_ORIG -m64 -flto" \
export CXXFLAGS="$CXXFLAGS_ORIG -m64 -flto" \
V=1 VERBOSE=1 make  DESTDIR=%{buildroot} MANDIR=/usr/share/man MANSUFFIX=openssl install
## install_macro end
## install_append content
install -D -m0644 apps/openssl.cnf %{buildroot}/usr/share/defaults/ssl/openssl.cnf
rm -rf %{buildroot}/etc/ssl
rm -rf %{buildroot}/usr/share/doc/openssl/html
rm -rf %{buildroot}/usr/share/man/
## install_append end

%files
%defattr(-,root,root,-)

%files data
%defattr(-,root,root,-)
/usr/share/defaults/ssl/openssl.cnf
